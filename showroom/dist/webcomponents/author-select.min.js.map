{"version":3,"file":"author-select.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorSelectElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      form: {\n        readonly: true\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      labels: {\n        private: true\n      },\n\n      middleware: {\n        private: true,\n        default: {\n          beforeChange: null,\n          afterChange: null\n        }\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      selectedOptionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-selected-options')\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      type: {\n        readonly: true,\n        get: () => this.multiple ? 'select-multiple' : 'select-one'\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      multiple: false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      },\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          default: return\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        this.emit('options.selected', evt.detail.options, this.selectedOptionsElement)\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        if (afterChange && typeof afterChange === 'function') {\n          afterChange(evt.detail.previous, this.selectedOptions)\n        }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'open':\n            if (!value) {\n              return this.PRIVATE.removeOpenListeners()\n            }\n\n            if (this.multiple) {\n              return this.removeAttribute('open')\n            }\n\n            this.optionsElement.unHoverAllOptions()\n            return this.PRIVATE.addOpenListeners()\n\n          case 'multiple':\n            if (value && this.hasAttribute('open')) {\n              this.removeAttribute('open')\n            }\n\n            break\n\n          default: return\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'multiple':\n            return this.emit('state.change', {\n              name: 'multiple',\n              value: this.multiple\n            })\n\n          case 'open':\n            return this.emit('state.change', {\n              name: 'open',\n              value: this.open\n            })\n\n          case 'placeholder':\n            if (this.selectedOptionsElement) {\n              this.selectedOptionsElement.update()\n            }\n\n            break\n\n            case 'size':\n              return this.PRIVATE.throwSizeAttributeWarning()\n\n          default: return\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'multiple', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get afterChange () {\n    return this.PRIVATE.middleware.afterChange\n  }\n\n  set afterChange (func) {\n    this.PRIVATE.middleware.afterChange = func.bind(this)\n  }\n\n  get beforeChange () {\n    return this.PRIVATE.middleware.beforeChange\n  }\n\n  set beforeChange (func) {\n    this.PRIVATE.middleware.beforeChange = func.bind(this)\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n    this.selectedOptionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (select, labels) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: select\n    })\n\n    let selectedOptionsElement = document.createElement('author-selected-options')\n    selectedOptionsElement.slot = 'selectedoptions'\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    this.PRIVATE.labels = labels\n\n    this.appendChild(selectedOptionsElement)\n    this.appendChild(optionsElement)\n\n    if (select.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(select.children).forEach(option => {\n          if (option.index !== select.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(select.children)\n\n      if (!this.multiple) {\n        this.selectedOptionsElement.add(this.optionsElement.options[this.selectedIndex])\n      }\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (selector !== ':checked') {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (selector !== ':checked') {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-select', AuthorSelectElement)\n\nexport default AuthorSelectElement\n"],"names":["AuthorSelectElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineProperties","form","readonly","hoveredIndex","get","optionsElement","injected","private","default","labels","middleware","beforeChange","afterChange","options","displayOptions","querySelector","selectedOptions","selectedOptionsElement","title","type","multiple","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","open","required","size","PRIVATE","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","preventDefault","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","detail","previous","removeOpenListeners","removeEventListener","stateChangeHandler","value","unHoverAllOptions","hasAttribute","printToConsole","toggleHandler","registerListeners","attribute.change","attribute","oldValue","newValue","update","blur","focus","options.selected","state.change","toggle","rendered","setAttribute","observedAttributes","func","bind","length","index","deselectAll","selectedOption","item","text","option","addOption","checkValidity","clear","select","defineProperty","createElement","slot","appendChild","children","Array","from","forEach","addOptions","add","id","namedItem","selector","querySelectorAll","remove","removeOptionByIndex","string","setCustomValidity","customElements","define"],"mappings":"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"}