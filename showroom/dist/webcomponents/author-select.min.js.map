{"version":3,"file":"author-select.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorSelectElement extends AuthorMenuElement {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      selectedOptionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-selected-options')\n      },\n\n      type: {\n        readonly: true,\n        get: () => this.multiple ? 'select-multiple' : 'select-one'\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      multiple: false\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'multiple': return this.emit('state.change', {\n            name: 'multiple',\n            value: this.multiple\n          })\n\n          case 'placeholder':\n            if (this.selectedOptionsElement) {\n              this.selectedOptionsElement.update()\n            }\n\n            break\n        }\n      },\n\n      'options.selected': evt => this.emit('options.selected', evt.detail.options, this.selectedOptionsElement)\n    })\n  }\n\n  static get observedAttributes () {\n    return [...AuthorMenuElement.observedAttributes, 'multiple']\n  }\n\n  clear () {\n    super.clear()\n    this.selectedOptionsElement.clear()\n  }\n\n  inject (sourceElement, labels = null) {\n    super.inject(sourceElement, labels)\n\n    if (sourceElement.localName === 'select') {\n      let selectedOptionsElement = document.createElement('author-selected-options')\n      selectedOptionsElement.slot = 'selectedoptions'\n      this.appendChild(selectedOptionsElement)\n\n      if (!this.multiple) {\n        let selectedOption = this.optionsElement.options[this.selectedIndex]\n\n        if (selectedOption) {\n          this.selectedOptionsElement.add(selectedOption);\n        }\n      }\n    }\n  }\n}\n\ncustomElements.define('author-select', AuthorSelectElement)\n\nexport default AuthorSelectElement\n"],"names":["AuthorSelectElement","AuthorMenuElement","[object Object]","super","this","UTIL","defineProperties","selectedOptionsElement","readonly","get","querySelector","type","multiple","defineAttributes","registerListeners","attribute.change","evt","attribute","oldValue","newValue","detail","emit","name","value","update","options.selected","options","observedAttributes","clear","sourceElement","labels","inject","localName","document","createElement","slot","appendChild","selectedOption","optionsElement","selectedIndex","add","customElements","define"],"mappings":"+yBAAA,MAAMA,UAA4BC,kBAChCC,cACEC,MAAM,mjBAENC,KAAKC,KAAKC,iBAAiB,CACzBC,uBAAwB,CACtBC,UAAU,EACVC,IAAK,IAAML,KAAKM,cAAc,4BAGhCC,KAAM,CACJH,UAAU,EACVC,IAAK,IAAML,KAAKQ,SAAW,kBAAoB,gBAInDR,KAAKC,KAAKQ,iBAAiB,CACzBD,UAAU,IAGZR,KAAKC,KAAKS,kBAAkBV,KAAM,CAChCW,mBAAoBC,IAClB,IAAIC,UAAEA,EAASC,SAAEA,EAAQC,SAAEA,GAAaH,EAAII,OAE5C,GAAID,IAAaD,EAIjB,OAAQD,GACN,IAAK,WAAY,OAAOb,KAAKiB,KAAK,eAAgB,CAChDC,KAAM,WACNC,MAAOnB,KAAKQ,WAGd,IAAK,cACCR,KAAKG,wBACPH,KAAKG,uBAAuBiB,WAOpCC,mBAAoBT,GAAOZ,KAAKiB,KAAK,mBAAoBL,EAAII,OAAOM,QAAStB,KAAKG,0BAItFoB,gCACE,MAAO,IAAI1B,kBAAkB0B,mBAAoB,YAGnDzB,QACEC,MAAMyB,QACNxB,KAAKG,uBAAuBqB,QAG9B1B,OAAQ2B,EAAeC,EAAS,MAG9B,GAFA3B,MAAM4B,OAAOF,EAAeC,GAEI,WAA5BD,EAAcG,UAAwB,CACxC,IAAIzB,EAAyB0B,SAASC,cAAc,2BAIpD,GAHA3B,EAAuB4B,KAAO,kBAC9B/B,KAAKgC,YAAY7B,IAEZH,KAAKQ,SAAU,CAClB,IAAIyB,EAAiBjC,KAAKkC,eAAeZ,QAAQtB,KAAKmC,eAElDF,GACFjC,KAAKG,uBAAuBiC,IAAIH,aAO1CI,eAAeC,OAAO,gBAAiB1C"}