{"version":3,"file":"author-base.es5.js","sources":["../src/element.js"],"sourcesContent":["const AuthorBaseElement = superClass => class extends superClass {\n  constructor (templateString) {\n    super()\n\n    Object.defineProperties(this, {\n      /**\n       * @property PRIVATE\n       * Storage Object for private methods and properties. Used internally.\n       * @type {object}\n       */\n      PRIVATE: {\n        value: {}\n      },\n\n      /**\n       * @property UTIL\n       * Storage Object for utility methods and properties.\n       * @type {object}\n       */\n      UTIL: {\n        value: {}\n      }\n    })\n\n    Object.defineProperties(this.PRIVATE, {\n      /**\n       * @property attributes\n       * Used internally to manage registered attributes.\n       * @private\n       */\n      attributes: {\n        value: {}\n      },\n\n      /**\n       * @property booleanAttributes\n       * Used internally to manage registered boolean attributes.\n       * @private\n       */\n      booleanAttributes: {\n        value: {}\n      },\n\n      /**\n       * @property properties\n       * Used internally to manage registered properties.\n       * @private\n       */\n      properties: {\n        value: {}\n      },\n\n      /**\n       * @property privateProperties\n       * Used internally to manage registered private properties.\n       * @private\n       */\n      privateProperties: {\n        value: []\n      },\n\n      /**\n       * @property listeners\n       * Used internally to manage registered event listeners.\n       * @private\n       */\n      listeners: {\n        value: []\n      },\n\n      /**\n       * @property styleRules\n       * Used internally to manage styling added to the component's internal stylesheet.\n       * @private\n       */\n      styleRules: {\n        value: {}\n      },\n\n      /**\n       * @property initialize\n       * Used internally to set up the element's Shadow Root and inject its template.\n       * @private\n       */\n      initialize: {\n        value: templateString => {\n          this.keySource = 'key' in KeyboardEvent.prototype ? 'key' : ('keyIdentifier' in KeyboardEvent.prototype ? 'keyIdentifier' : 'keyCode')\n\n          this.attachShadow({ mode: 'open' })\n\n          let container = document.createElement('div')\n          container.insertAdjacentHTML('afterbegin', templateString)\n\n          let template = container.querySelector('template')\n\n          if ('content' in template) {\n            this.shadowRoot.appendChild(template.content.cloneNode(true))\n          } else {\n            template.childNodes.forEach((child) => {\n              this.shadowRoot.appendChild(child.cloneNode(true))\n            })\n          }\n\n          template = null\n          this.crypto = null\n\n          try {\n            this.crypto = crypto\n          } catch (e) {\n            this.crypto = msCrypto\n          }\n        }\n      },\n\n      /**\n       * @method definePrivateProperty\n       * Used internally to register new private properties on the element\n       * @param  {string} name\n       * @param  {CustomPropertyObject} data\n       * @private\n       */\n      definePrivateProperty: {\n        value: (name, data) => {\n          this.PRIVATE.privateProperties[name] = null\n\n          Object.defineProperty(this.PRIVATE, name, {\n            get: () => {\n              if (data.hasOwnProperty('get')) {\n                if (typeof data.get !== 'function') {\n                  return this.UTIL.throwError({\n                    type: 'type',\n                    message: 'Property getter must be a function'\n                  })\n                }\n\n                return data.get()\n              }\n\n              return this.PRIVATE.privateProperties[name] === null ? data.default : this.PRIVATE.privateProperties[name]\n            },\n\n            set: value => {\n              if (data.readonly) {\n                return this.UTIL.throwError({\n                  type: 'readonly',\n                  vars: { prop: name }\n                })\n              }\n\n              this.PRIVATE.privateProperties[name] = value\n            }\n          })\n        }\n      },\n\n      /**\n       * @method defineReadOnlyProperty\n       * Used internally to register new readonly properties on the element.\n       * @param  {string} name\n       * @param  {CustomPropertyObject} data\n       * @private\n       */\n      defineReadOnlyProperty: {\n        value: (name, data) => {\n          let cfg = {\n            set: value => {\n              this.UTIL.throwError({\n                type: 'readonly',\n                vars: { prop: name }\n              })\n            },\n\n            get: () => {\n              if (data.hasOwnProperty('get')) {\n                if (typeof data.get !== 'function') {\n                  return this.UTIL.throwError({\n                    type: 'type',\n                    message: 'Property getter must be a function'\n                  })\n                }\n\n                return data.get()\n              }\n\n              return data.hasOwnProperty('default') ? data.default : null\n            }\n          }\n\n          Object.defineProperty(this, name, cfg)\n        }\n      },\n\n      /**\n       * @method generateAuthorHTMLCollectionConstructor\n       * Generates a class constructor for an AuthorHTMLCollection\n       * @returns {AuthorHTMLCollection}\n       * @private\n       */\n      generateAuthorHTMLCollectionConstructor: {\n        value: function () {\n          let _p = new WeakMap()\n\n          let AuthorHTMLCollection = class AuthorHTMLCollection {\n            constructor (arr) {\n              _p.set(this, { arr })\n              arr.forEach((node, index) => {\n                this[index] = node\n\n                if (node.id) {\n                  this[node.id] = node\n                }\n              })\n            }\n\n            get length () {\n              return _p.get(this).arr.length\n            }\n\n            item (index) {\n              return _p.get(this).arr[index]\n            }\n\n            namedItem (name) {\n              let matches = _p.get(this).arr.filter(item => item.id === name || item.name === name)\n              return matches.length > 0 ? matches[0] : null\n            }\n\n            [Symbol.iterator] () {\n              let index = 0\n\n              return {\n                next: () => {\n                  let result = {\n                    value: _p.get(this).arr[index],\n                    done: !(index in _p.get(this).arr)\n                  }\n\n                  index++\n\n                  return result\n                }\n              }\n            }\n\n            [Symbol.toStringTag] () {\n              return 'AuthorHTMLCollection'\n            }\n          }\n\n          return AuthorHTMLCollection\n        }\n      },\n\n      getStyleRule: {\n        value: name => {\n          let rule = this.PRIVATE.styleRules[name]\n\n          if (!rule) {\n            return this.UTIL.throwError({\n              message: `Style Rule \"${name}\" not found`\n            })\n          }\n\n          return rule\n        }\n      },\n\n      /**\n       * @method getBooleanAttributeValue\n       * Used internally. Returns a validated boolean attribute value.\n       * @param  {string} name\n       * @return {boolean}\n       * @private\n       */\n      getBooleanAttributeValue: {\n        value: name => this.hasAttribute(name) && this.getAttribute(name) !== 'false'\n      },\n\n      /**\n       * @method setBooleanAttributeValue\n       * Used internally. Ensures that a boolean attribute recieves a valid\n       * boolean as a value.\n       * @param  {string} name\n       * @param  {any} value\n       * @private\n       */\n      setBooleanAttributeValue: {\n        value: (name, value) => {\n          if (typeof value === 'boolean') {\n            value = value.toString()\n          }\n\n          let acceptableValues = ['true', 'false', '', null]\n\n          if (!acceptableValues.includes(value)) {\n            this.UTIL.printToConsole(`\"${name}\" attribute expected boolean but received \"${value}\"`, 'error')\n            return this.removeAttribute(name)\n          }\n\n          switch (value) {\n            case 'false':\n            case null:\n              return this.removeAttribute(name)\n\n            case 'true':\n            case '':\n              return this.setAttribute(name, '')\n          }\n        }\n      },\n    })\n\n    Object.defineProperties(this.UTIL, {\n      /**\n       * @property childMonitor\n       * The MutationObserver instance created upon calling this.UTIL.monitorChildren.\n       * @type {MutationObserver}\n       */\n      childMonitor: {\n        value: null\n      },\n\n      /**\n       * @typedef {object} CustomAttributeObject shape: {\n       *   get: {function} Custom getter\n       *   set: {function} Custom setter\n       *   default: {any} Default value\n       * }\n       */\n\n      /**\n       * @method defineAttribute\n       * Registers a new attribute on the element and connects it to a new\n       * property of the same name.\n       * @param  {string} name\n       * @param  {string|number|boolean|CustomAttributeObject} defaultValue\n       * If a default value is passed, or if a CustomAttributeObject is passed\n       * which includes a \"default\" property, getters will be applied that\n       * return the default value if the actual value is null or undefined.\n       */\n      defineAttribute: {\n        value: (name, defaultValue) => {\n          let customGetter = null\n          let customSetter = null\n\n          if (typeof defaultValue === 'object') {\n            let cfg = defaultValue\n\n            if (cfg.hasOwnProperty('get')) {\n              customGetter = cfg.get\n            }\n\n            if (cfg.hasOwnProperty('set')) {\n              customSetter = cfg.set\n            }\n\n            defaultValue = cfg.hasOwnProperty('default') ? cfg.default : null\n          }\n\n          let isBool = typeof defaultValue === 'boolean'\n          let privateKey = isBool ? 'booleanAttributes' : 'attributes'\n\n          Object.defineProperty(this.PRIVATE[privateKey], name, {\n            get: () => {\n              if (customGetter) {\n                let result = customGetter()\n                return result === null ? defaultValue : result\n              }\n\n              return defaultValue\n            },\n\n            set: value => customSetter && customSetter(value)\n          })\n\n          Object.defineProperty(this, name, {\n            get: () => {\n              if (customGetter) {\n                let result = customGetter()\n                return result === null ? defaultValue : result\n              }\n\n              if (isBool) {\n                return this.PRIVATE.getBooleanAttributeValue(name)\n              }\n\n              return this.hasAttribute(name) ? this.getAttribute(name) : defaultValue\n            },\n\n            set: value => {\n              customSetter && customSetter(value)\n\n              if (customGetter) {\n                value = this.PRIVATE[privateKey][name]\n              }\n\n              if (isBool) {\n                return this.PRIVATE.setBooleanAttributeValue(name, value)\n              }\n\n              this.setAttribute(name, value)\n            }\n          })\n        }\n      },\n\n      /**\n       * @method defineAttributes\n       * Define multiple attributes at once.\n       * @param  {object} attrs\n       * Example:\n       * {\n       *   booleanAttr: false,\n       *   stringAttr: 'string',\n       *   customAttr: {\n       *     get: () => this.customAttribute,\n       *     default: 'defaultValue'\n       *   }\n       * }\n       *\n       * Custom attributes are configured as CustomAttributeObject\n       */\n      defineAttributes: {\n        value: attrs => {\n          for (let attr in attrs) {\n            this.UTIL.defineAttribute(attr, attrs[attr])\n          }\n        }\n      },\n\n      /**\n       * @typedef {object} CustomPropertyObject shape: {\n       *   readonly: {boolean} optional\n       *   private: {boolean} optional,\n       *   default: {any} Default property value,\n       *   get: {function} Custom Getter,\n       *   set: {function} Custom setter\n       * }\n       */\n\n      /**\n       * @method defineProperty\n       * Registers a custom property on the element. If an attribute of the same\n       * name already exists, its paired property will be overwritten.\n       * @param  {string} name\n       * @param  {string|boolean|number|CustomPropertyObject} value\n       */\n      defineProperty: {\n        value: (name, value) => {\n          if (typeof value !== 'object' || value === null) {\n            this.PRIVATE.properties[name] = value\n            this[name] = value\n            return\n          }\n\n          let data = {\n            readonly: value.hasOwnProperty('readonly') && value.readonly === true,\n            private: value.hasOwnProperty('private') && value.private === true,\n            default: value.hasOwnProperty('default') ? value.default : null\n          }\n\n          if (value.hasOwnProperty('get')) {\n            if (typeof value.get !== 'function') {\n              return this.UTIL.throwError({\n                type: 'type',\n                message: 'Property getter must be a function'\n              })\n            }\n\n            data.get = value.get\n          }\n\n          if (value.hasOwnProperty('set')) {\n            if (typeof value.set !== 'function') {\n              return this.UTIL.throwError({\n                type: 'type',\n                message: 'Property setter must be a function'\n              })\n            }\n\n            data.set = value.set\n          }\n\n          if (value.private) {\n            return this.PRIVATE.definePrivateProperty(name, data)\n          }\n\n          if (value.readonly) {\n            return this.PRIVATE.defineReadOnlyProperty(name, data)\n          }\n\n          this.PRIVATE.properties[name] = data.default\n\n          Object.defineProperty(this, name, {\n            get: () => {\n              if (data.hasOwnProperty('get')) {\n                return data.get()\n              }\n\n              return this.PRIVATE.properties[name] === null ? data.default : this.PRIVATE.properties[name]\n            },\n\n            set: value => {\n              if (data.hasOwnProperty('set')) {\n                return data.set(value)\n              }\n\n              this.PRIVATE.properties[name] = value\n            }\n          })\n        }\n      },\n\n      /**\n       * @method defineProperties\n       * Register multiple properties at once on the element.\n       * @param  {object} properties\n       * Example: {\n       *   booleanProperty: false,\n       *   stringProperty: 'string',\n       *   customProperty: {\n       *     readonly: true,\n       *     private: true,\n       *     get: () => {\n       *       doSomething()\n       *       return this.customProperty\n       *     },\n       *     default: 'default value'\n       *   }\n       * }\n       */\n      defineProperties: {\n        value: properties => {\n          for (let property in properties) {\n            this.UTIL.defineProperty(property, properties[property])\n          }\n        }\n      },\n\n      /**\n       * @method definePrivateMethods\n       * Register multiple private methods on the element. These will be added\n       * tp the element's \"PRIVATE\" object and can be accessed via this.PRIVATE.*\n       * @param  {object} methods\n       * Example {\n       *   myPrivateMethod: () => doSomething()\n       * }\n       */\n      definePrivateMethods: {\n        value: methods => {\n          for (let method in methods) {\n            if (this.PRIVATE.hasOwnProperty(method)) {\n              return this.UTIL.throwError({\n                message: `Cannot create private method. Property name \"${method}\" is already in use.`\n              })\n            }\n\n            this.PRIVATE[method] = methods[method]\n          }\n        }\n      },\n\n      /**\n       * @method createEvent\n       * Returns a new CustomEvent object.\n       * @param  {[type]} name\n       * Name of the event\n       * @param  {object} detail\n       * Properties to add to event.detail\n       * @return {CustomEvent}\n       */\n      createEvent: {\n        value: (name, detail) => {\n          return new CustomEvent(name, { detail })\n        }\n      },\n\n      /**\n       * @method generateGuid\n       * @param  {string} [prefix=null]\n       * String to prepend to the beginning of the id.\n       * @param  {string} [postfix=null]\n       * String to append to the end of the id.\n       * @return {string}\n       * New RFC-compliant GUID\n       */\n      generateGuid: {\n        value: (prefix = null, postfix = null) => {\n          let id = ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => { // eslint-disable-line space-infix-ops\n            return (c ^ this.crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n          })\n\n          if (prefix) {\n            id = `${prefix}${id}`\n          }\n\n          if (postfix) {\n            id = `${id}${postfix}`\n          }\n\n          return id\n        }\n      },\n\n      /**\n       * @method insertStyleRule\n       * Inserts a new CSS rule-set into the component's shadow root style sheet.\n       * @param {string} name\n       * Unique identifier to be used as an accessor for this rule-set\n       * @param {string} selector\n       * CSS selector string\n       * @param {number} index [optional]\n       * Index at which to add the new style rule\n       */\n      insertStyleRule: {\n        value: (name, selector, index = this.PRIVATE.styleSheet.cssRules.length) => {\n          this.PRIVATE.styleSheet.insertRule(selector, index)\n          this.PRIVATE.styleRules[name] = {\n            default: this.PRIVATE.styleSheet.cssRules[index],\n          }\n\n          if (selector.includes(':host(')) {\n            selector = `${this.localName}${/\\(([^)]+)\\)/.exec(selector)[1]} {}`\n            index += 1\n\n            if (selector) {\n              this.PRIVATE.styleSheet.insertRule(selector, index)\n              this.PRIVATE.styleRules[name].legacy = this.PRIVATE.styleSheet.cssRules[index]\n            }\n          }\n        }\n      },\n\n      /**\n       * @method insertStyleRules\n       * Inserts one or more new CSS rule-sets into the component's shadow root style sheet.\n       * @param {object} rules\n       * CSS selector string or definition object. If using a definition object, the key name\n       * will be used as an accessor for this rule.\n       * @param {string} rules.selector\n       * CSS selector string\n       * @param {string} rules.index [optional]\n       * Index at which to insert the new rule into the style sheet.\n       */\n      insertStyleRules: {\n        value: rules => {\n          for (let rule in rules) {\n            let input = rules[rule]\n\n            if (typeof input === 'string') {\n              this.UTIL.insertStyleRule(rule, input)\n              continue\n            }\n\n            if (Array.isArray(input) || typeof input !== 'object') {\n              return this.UTIL.throwError({\n                type: 'type',\n                message: `Invalid Style Rule definition \"${JSON.stringify(input)}\". Definitions must either be a valid CSS selector string or an object`\n              })\n            }\n\n            if (!input.hasOwnProperty('selector')) {\n              return this.UTIL.throwError({\n                message: 'Style Rule Definition must include a \"selector\" property'\n              })\n            }\n\n            this.insertStyleRule(rule, input.selector, input.hasOwnProperty('index') ? input.index : null)\n          }\n        }\n      },\n\n      /**\n       * @method removeStyleProperty\n       * Removes a style property declaration from the specified rule in the component's shadow root style sheet.\n       * @param {string} ruleName\n       * Name of the rule\n       * @param {string} propertyName\n       * CSS property name\n       */\n      removeStyleProperty: {\n        value: (ruleName, propertyName) => {\n          let rule = this.PRIVATE.getStyleRule(ruleName)\n\n          rule.default.style.removeProperty(propertyName)\n\n          if (rule.hasOwnProperty('legacy')) {\n            rule.legacy.style.removeProperty(propertyName)\n          }\n        }\n      },\n\n      /**\n       * @method removeStyleProperties\n       * Removes a set of style property declarations from the specified rule in the component's shadow root style sheet.\n       * @param {string} ruleName\n       * Name of the rule\n       * @param {array} propertyNames\n       * Names of the CSS properties to remove\n       */\n      removeStyleProperties: {\n        value: (ruleName, propertyNames) => {\n          if (!Array.isArray(propertyNames)) {\n            return this.UTIL.throwError({\n              type: 'type',\n              message: `Style property names must be an array of strings`\n            })\n          }\n\n          propertyNames.forEach(propertyName => this.UTIL.removeStyleProperty(ruleName, propertyName))\n        }\n      },\n\n      /**\n       * @method setStyleProperty\n       * Adds a new style declaration to the component's shadow root style sheet, or updates an existing one.\n       * @param {string} ruleName\n       * String identifier for the style rule to add the declaration to.\n       * @param {string} propertyName\n       * CSS property\n       * @param {string} propertyValue\n       * CSS property value\n       * @param {boolean} important [optional]\n       * true sets the important flag on this property declaration.\n       */\n      setStyleProperty: {\n        value: (ruleName, propertyName, propertyValue, important = false) => {\n          let rule = this.PRIVATE.getStyleRule(ruleName)\n\n          rule.default.style.setProperty(propertyName, propertyValue, important ? 'important' : undefined)\n\n          if (rule.hasOwnProperty('legacy')) {\n            rule.legacy.style.setProperty(propertyName, propertyValue, important ? 'important' : undefined)\n          }\n        }\n      },\n\n      /**\n       * @method setStyleProperties\n       * Adds a set of new style declarations to the component's shadow root style sheet, or updates existing ones.\n       * @param {string} ruleName\n       * String identifier for the style rule to add the declaration to.\n       * @param {array} properties\n       * Array of objects of shape: {\n       *   name: {string} CSS property name,\n       *   value: {string} CSS property value,\n       *   important: {boolean} Determines whether or not to set the !important flag [optional]\n       * }\n       */\n      setStyleProperties: {\n        value: (ruleName, properties) => {\n          if (!Array.isArray(properties)) {\n            return this.UTIL.throwError({\n              type: 'type',\n              message: `Style properties must be an array of objects`\n            })\n          }\n\n          properties.forEach(property => {\n            let important = property.hasOwnProperty('important') && property.important === true\n            this.UTIL.setStyleProperty(ruleName, property.name, property.value, important)\n          })\n        }\n      },\n\n      /**\n       * @typedef {string} ErrorType (custom, dependency, readonly, reference, type)\n       * Indentifier for JavaScript built-in Error types including:\n       * Error, TypeError, ReferenceError, or custom Error\n       */\n\n      /**\n       * @method throwError\n       * Throws a customizable new Error.\n       * @param {object} properties\n       * @property {ErrorType} type\n       * Type of error to throw. For example, 'reference' will throw a\n       * new ReferenceError() instance, while 'type' will throw a new TypeError()\n       * instance. Other values will throw customizable new Error() instances.\n       * @property {object} vars\n       * Some error types have default messages which accept interpolated variables.\n       * For example, 'dependency' errors accept an options 'name' variable, the\n       * value of which should be the name of the missing dependency. They also\n       * accept a 'url' variable, the value of which should be a url where the\n       * dependency can be acquired.\n       * @property {string} message\n       * A custom message to append to the default error message.\n       *\n       * Example usage:\n       * ```js\n       * this.UTIL.throwError({\n       *   type: 'dependency',\n       *   vars: {\n       *     name: 'NGN',\n       *     url: 'https://github.com/ngnjs/NGN'\n       *   },\n       *   message: 'NGN makes development a breeze!'\n       * })\n       * ```\n       */\n      throwError: {\n        value: properties => {\n          let finalMessage = `<${this.localName}> `\n\n          let type = properties.hasOwnProperty('type') ? properties.type : 'custom'\n          let error = new Error()\n          let { vars } = properties\n\n          if (type === 'dependency') {\n            finalMessage += 'Missing dependency'\n\n            if (vars) {\n              if (vars.hasOwnProperty('name')) {\n                finalMessage += `: ${vars.name}`\n              }\n\n              if (vars.hasOwnProperty('url')) {\n                finalMessage += ` ${vars.url}`\n              }\n            }\n\n          } else if (type === 'readonly') {\n            finalMessage += `Cannot set read-only property`\n\n            if (vars && vars.hasOwnProperty('prop')) {\n              finalMessage += ` \"${vars.prop}\"`\n            }\n\n          } else if (type === 'reference') {\n            error = new ReferenceError()\n\n          } else if (type === 'type') {\n            error = new TypeError()\n\n          } else {\n            return this.UTIL.throwError({\n              message: `Unrecognized error type \"${type}\". Accepted types: \"custom\", \"dependency\", \"readonly\", \"reference\", \"type\"`\n            })\n          }\n\n          if (properties.hasOwnProperty('message')) {\n            finalMessage += ` ${properties.message}`\n          }\n\n          error.message = finalMessage.trim()\n          throw error\n        }\n      },\n\n      /**\n        * @typedef {string} ConsoleLogType (warning, error, info, log)\n        * Indentifier for window.console built-in methods including:\n        * warn(), error(), info(), log()\n        */\n\n      /**\n       * @method printToConsole\n       * Prints a message to the console, along with the tag-name of the element.\n       * Can print customizable warnings, errors, info, or default logs.\n       * @param {string} message\n       * Message to print.\n       * @param {ConsoleLogType} [type = 'log']\n       * Type of message to print to the console. This will determine which\n       * method of the window.console object is used to print the message.\n       */\n      printToConsole: {\n        value: (message, type = 'log') => {\n          let finalMessage = `<${this.localName}> ${message}`\n\n          switch (type) {\n            case 'warning': return console.warn(`[WARNING] ${finalMessage}`)\n            case 'error': return console.error(`[ERROR] ${finalMessage}`)\n            case 'info': return console.info(finalMessage)\n            default: return console.log(finalMessage)\n          }\n        }\n      },\n\n      /**\n       * @method monitorChildren\n       * Applies a MutationObserver to the element.\n       * @param {function} callback\n       * Runs when a mutation occurs\n       * @param {Boolean} [subtree = false]\n       * Determines whether or not to observe changes to the descendants of the target node\n       */\n      monitorChildren: {\n        value: (callback, cfg = null) => {\n          this.childMonitor = new MutationObserver(callback)\n\n          cfg = cfg || {\n            childList: true,\n            attributes: false,\n            characterData: false,\n            subtree: false\n          }\n\n          this.childMonitor.observe(this, cfg)\n        }\n      },\n\n      /**\n       * @method registerListener\n       * Applies an event listener. This listener will be automatically cleaned up\n       * upon element disconnect.\n       * @param {DOMNode} element\n       * Element to which to apply the event listener.\n       * @param {string} evtName\n       * Name of the event to listen to.\n       * @param {function} callback\n       * Function to call upon firing of the event.\n       */\n      registerListener: {\n        value: (element, evtName, callback) => {\n          let listener = {\n            id: `listener_${this.UTIL.generateGuid()}`,\n            apply: () => element.addEventListener(evtName, callback),\n            remove: () => element.removeEventListener(evtName, callback)\n          }\n\n          this.PRIVATE.listeners.push(listener)\n          listener.apply()\n        }\n      },\n\n      /**\n       * @method registerListeners\n       * Applies multiple event listeners at once. Each listener will be automatically cleaned up\n       * upon element disconnect.\n       * @param {DOMNode} element\n       * Element to which to apply all the event listeners.\n       * @param {{name: String, callback: Function}[]} listeners\n       * Event Listeners to apply.\n       */\n      registerListeners: {\n        value: (element, listeners) => {\n          for (let listener in listeners) {\n            this.UTIL.registerListener(element, listener, listeners[listener])\n          }\n        }\n      }\n    })\n\n    this.PRIVATE.initialize(templateString)\n  }\n\n  /**\n   * @override\n   * @method attributeChangedCallback\n   * Synchronizes attribute/property updates.\n   * @param  {string} attribute\n   * @param  {string} oldValue\n   * @param  {string} newValue\n   * @fires attribute.change\n   * Fires before change is applied to matching properties.\n   * @fires attribute.changed\n   * Fires after change has been applied to matching properties.\n   */\n  attributeChangedCallback (attribute, oldValue, newValue) {\n    this.emit('attribute.change', {\n      attribute,\n      oldValue,\n      newValue\n    })\n\n    let { attributes, booleanAttributes } = this.PRIVATE\n\n    if (attributes.hasOwnProperty(attribute) && attributes[attribute] !== newValue) {\n      this.PRIVATE.attributes[attribute] = newValue\n    } else if (booleanAttributes.hasOwnProperty(attribute) && newValue !== 'true' && newValue !== '') {\n      this.PRIVATE.booleanAttributes[attribute] = newValue\n    }\n\n    this.emit('attribute.changed', {\n      attribute,\n      oldValue,\n      newValue\n    })\n  }\n\n  /**\n   * @override\n   * @method connectedCallback\n   * Fires events upon element connection.\n   * @fires 'connected'\n   * @fires 'rendered'\n   * Fires once the element's children have been rendered to the DOM.\n   */\n  connectedCallback () {\n    Object.defineProperty(this.PRIVATE, 'styleSheet', {\n      value: this.shadowRoot.querySelector('style').sheet\n    })\n\n    this.emit('connected')\n    setTimeout(() => this.emit('rendered'), 0)\n  }\n\n  /**\n   * @override\n   * @method disconnectedCallback\n   * Removes all registered event listeners upon element disconnect.\n   * @fires 'disconnected'\n   */\n  disconnectedCallback () {\n    this.PRIVATE.listeners.forEach(listener => listener.remove())\n    this.emit('disconnected')\n  }\n\n  /**\n   * @method emit\n   * Dispatches a new CustomEvent()\n   * @param  {string} name\n   * Name of event to dispatch\n   * @param  {object} detail\n   * Data object to include in the event's payload\n   * @param  {HTMLElement} [target=null]\n   * DOM node to fire the event at.\n   */\n  emit (name, detail, target = null) {\n    let event = this.UTIL.createEvent(name, detail)\n\n    if (target) {\n      return target.dispatchEvent(event)\n    }\n\n    this.dispatchEvent(event)\n  }\n\n  /**\n   * @method off\n   * Convenience method. Removes an event listener from the element.\n   * @param  {string}   evtName\n   * @param  {function} handler\n   */\n  off (evtName, handler) {\n    this.removeEventListener(evtName, handler)\n  }\n\n  /**\n   * @method on\n   * Convenience method. Attaches an event listener to the element.\n   * @param  {string}   evtName\n   * @param  {function} handler\n   * Called when the event is fired.\n   */\n  on (evtName, handler) {\n    this.addEventListener(evtName, handler)\n  }\n}\n\nexport default AuthorBaseElement\n"],"names":["AuthorBaseElement","superClass","templateString","Object","defineProperties","PRIVATE","value","UTIL","attributes","booleanAttributes","properties","privateProperties","listeners","styleRules","initialize","keySource","KeyboardEvent","prototype","attachShadow","mode","container","document","createElement","insertAdjacentHTML","template","querySelector","shadowRoot","appendChild","content","cloneNode","childNodes","forEach","child","crypto","e","msCrypto","definePrivateProperty","name","data","defineProperty","get","hasOwnProperty","throwError","type","message","default","set","readonly","vars","prop","defineReadOnlyProperty","cfg","generateAuthorHTMLCollectionConstructor","_p","WeakMap","AuthorHTMLCollection","arr","node","index","id","matches","filter","item","length","Symbol","iterator","next","result","done","toStringTag","getStyleRule","rule","getBooleanAttributeValue","hasAttribute","getAttribute","setBooleanAttributeValue","toString","acceptableValues","includes","printToConsole","removeAttribute","setAttribute","childMonitor","defineAttribute","defaultValue","customGetter","customSetter","isBool","privateKey","defineAttributes","attrs","attr","private","property","definePrivateMethods","methods","method","createEvent","detail","CustomEvent","generateGuid","prefix","postfix","replace","c","getRandomValues","Uint8Array","insertStyleRule","selector","styleSheet","cssRules","insertRule","localName","exec","legacy","insertStyleRules","rules","input","Array","isArray","JSON","stringify","removeStyleProperty","ruleName","propertyName","style","removeProperty","removeStyleProperties","propertyNames","setStyleProperty","propertyValue","important","setProperty","undefined","setStyleProperties","finalMessage","error","Error","url","ReferenceError","TypeError","trim","console","warn","info","log","monitorChildren","callback","MutationObserver","childList","characterData","subtree","observe","registerListener","element","evtName","listener","apply","addEventListener","remove","removeEventListener","push","registerListeners","attribute","oldValue","newValue","emit","sheet","setTimeout","target","event","dispatchEvent","handler"],"mappings":"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"}