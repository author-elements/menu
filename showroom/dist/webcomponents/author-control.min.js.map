{"version":3,"file":"author-control.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorFormControlElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      type: ''\n    })\n\n    this.UTIL.defineProperties({\n      initialValue: {\n        default: null\n      },\n\n      input: {\n        private: true\n      },\n\n      fieldInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'color',\n          'date',\n          'datetime-local',\n          'email',\n          'file',\n          'hidden',\n          'image',\n          'month',\n          'number',\n          'password',\n          'range',\n          'reset',\n          'search',\n          'submit',\n          'tel',\n          'text',\n          'time',\n          'url',\n          'week',\n          'textarea'\n        ]\n      },\n\n      toggleInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'checkbox',\n          'radio'\n        ],\n      },\n\n      supportedTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'field',\n          'toggle',\n          'select'\n        ]\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      initDatalist: (input, datalist) => {\n        this.type = 'select'\n\n        if (!customElements.get('author-datalist')) {\n          input.id = this.PRIVATE.guid\n          datalist.id = `${input.id}_datalist`\n          input.setAttribute('list', datalist.id)\n          input.slot = input.slot || 'input'\n          // select.setAttribute('role', 'menu')\n          this.PRIVATE.input = input\n\n          let titleEls = datalist.querySelectorAll('option[title]')\n          titleEls.forEach(el => select.removeChild(el))\n\n          Array.from(datalist.options).forEach(option => {\n            if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n              option.removeAttribute('label')\n            }\n          })\n\n          return\n        }\n\n        let surrogate = document.createElement('author-datalist')\n        surrogate.slot = 'input'\n\n        Array.from(datalist.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              datalist.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(datalist)\n        this.removeChild(input)\n\n        // Use a select as sourceElement to preserve option indexes, since\n        // datalist doesn't assign indexes to child options\n        let select = document.createElement('select')\n        Array.from(datalist.children).forEach(option => select.add(option))\n        select.selectedIndex = -1\n\n        surrogate.inject(input, select, this.PRIVATE.guid)\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initInput: input => {\n        input.slot = input.slot || 'input'\n        this.PRIVATE.input = input\n        input.id = this.PRIVATE.guid\n        this.initialValue = input.value\n\n        if (this.PRIVATE.fieldInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'field'\n        }\n\n        if (this.PRIVATE.toggleInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'toggle'\n        }\n      },\n\n      initLabel: label => {\n        this.label = label\n        label.slot = label.slot || 'label'\n        label.htmlFor = this.PRIVATE.guid\n\n        if (this.type === 'select') {\n          this.label.addEventListener('click', (evt) => {\n            this.input.focus()\n          })\n        }\n      },\n\n      initDefaultSelect: select => {\n        select.id = this.PRIVATE.guid\n        select.slot = select.slot || 'input'\n        select.setAttribute('role', 'menu')\n        this.PRIVATE.input = select\n\n        // Purge incompatible attributes\n        let titleEls = select.querySelectorAll('option[title]')\n        titleEls.forEach(el => select.removeChild(el))\n\n        Array.from(select.options).forEach(option => {\n          if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n            option.removeAttribute('label')\n          }\n        })\n      },\n\n      initMultipleSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedOptions\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      initSelectSurrogate: (original, surrogate) => {\n        surrogate.slot = 'input'\n        surrogate.id = this.PRIVATE.guid\n\n        Array.from(original.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              original.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(original)\n        surrogate.inject(original, this.querySelectorAll('label'))\n\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedIndex\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      transformChild: (node, index, collection) => {\n        switch (node.nodeName) {\n          case 'LABEL':\n            return this.PRIVATE.initLabel(node)\n\n          case 'INPUT':\n            // Check if there is an additional element adjacent to the input\n            if (collection[index + 1] === void 0) {\n              return this.PRIVATE.initInput(node)\n            }\n\n            let adjacentElement = collection[index + 1];\n\n            if (!adjacentElement || adjacentElement.nodeName !== 'DATALIST') {\n              return this.PRIVATE.initInput(node)\n            }\n\n            return this.PRIVATE.initDatalist(node, adjacentElement)\n\n          case 'TEXTAREA':\n            return this.PRIVATE.initInput(node)\n\n          case 'SELECT':\n            if (!node.multiple) {\n              return this.PRIVATE.initSelectMenu(node)\n            }\n\n            return this.PRIVATE.initMultipleSelectMenu(node)\n\n          default:\n            this.initialValue = node.value;\n            return\n        }\n      }\n    })\n\n    this.UTIL.monitorChildren((mutations, observer) => {\n      let filtered = mutations.filter(record => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return false\n        }\n\n        return node.nodeType !== 3\n      })\n\n      filtered.forEach((record, index, array) => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return\n        }\n\n        this.PRIVATE.transformChild(node, index, array.map(mutation => mutation.addedNodes.item(0)))\n      })\n\n      observer.disconnect()\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => this.PRIVATE.guid = this.UTIL.generateGuid('control_'),\n      rendered: () => Array.from(this.children).forEach((child, index, array) => this.PRIVATE.transformChild(child, index, array))\n    })\n  }\n\n  static get observedAttributes () {\n    return ['disabled']\n  }\n\n  get input () {\n    return this.PRIVATE.input\n  }\n\n  set input (input) {\n    if (this.input) {\n      return console.warn(`Setting <${this.localName}> child input programmatically is not allowed.`)\n    }\n\n    this.PRIVATE.input = input\n  }\n}\n\ncustomElements.define('author-control', AuthorFormControlElement)\n\nexport default AuthorFormControlElement\n"],"names":["AuthorFormControlElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineAttributes","type","defineProperties","initialValue","default","input","private","fieldInputTypes","readonly","toggleInputTypes","supportedTypes","definePrivateMethods","initDatalist","datalist","customElements","get","id","PRIVATE","guid","setAttribute","slot","querySelectorAll","forEach","el","select","removeChild","Array","from","options","option","hasAttribute","getAttribute","trim","removeAttribute","surrogate","document","createElement","attributes","attr","specified","name","value","children","add","selectedIndex","inject","appendChild","initInput","indexOf","initLabel","label","htmlFor","addEventListener","evt","focus","initDefaultSelect","initMultipleSelectMenu","selectedOptions","initSelectSurrogate","original","initSelectMenu","transformChild","node","index","collection","nodeName","adjacentElement","multiple","monitorChildren","mutations","observer","filter","record","addedNodes","item","nodeType","array","map","mutation","disconnect","registerListeners","connected","generateGuid","rendered","child","observedAttributes","console","warn","localName","define"],"mappings":"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"}