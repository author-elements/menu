{"version":3,"file":"author-menu.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorMenuElement extends AuthorBaseElement(HTMLElement) {\n  constructor (templateString = null) {\n    super(templateString || `{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      form: {\n        readonly: true\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 27:\n          case 'Escape':\n            this.PRIVATE.clear()\n            return this.close()\n\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          default: return\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        // let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        this.emit('options.selected', evt.detail.options, this.selectedOptionsElement)\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        // if (afterChange && typeof afterChange === 'function') {\n        //   afterChange(evt.detail.previous, this.selectedOptions)\n        // }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        if (name === 'multiple' && value && this.hasAttribute('open')) {\n          this.removeAttribute('open')\n        }\n\n        if (name === 'open') {\n          if (!value) {\n            return this.PRIVATE.removeOpenListeners()\n          }\n\n          if (this.multiple) {\n            return this.removeAttribute('open')\n          }\n\n          this.optionsElement.unHoverAllOptions()\n          return this.PRIVATE.addOpenListeners()\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'open':\n            return this.emit('state.change', {\n              name: 'open',\n              value: this.open\n            })\n\n          case 'placeholder':\n            if (this.selectedOptionsElement) {\n              this.selectedOptionsElement.update()\n            }\n\n            break\n\n            case 'size':\n              return this.PRIVATE.throwSizeAttributeWarning()\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (sourceElement, labels = null) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: sourceElement\n    })\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    if (labels) {\n      this.UTIL.defineProperty('labels', {\n        private: true,\n        default: labels\n      })\n    }\n\n    this.appendChild(optionsElement)\n\n    if (sourceElement.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(sourceElement.children).forEach(option => {\n          if (option.index !== sourceElement.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(sourceElement.children)\n\n      if (sourceElement.localName === 'select') {\n        let selectedOptionsElement = document.createElement('author-selected-options')\n        selectedOptionsElement.slot = 'selectedoptions'\n        this.appendChild(selectedOptionsElement)\n\n        if (!this.multiple) {\n          this.selectedOptionsElement.add(this.optionsElement.options[this.selectedIndex])\n        }\n      }\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-menu', AuthorMenuElement)\n\nexport default AuthorMenuElement\n"],"names":["AuthorMenuElement","AuthorBaseElement","HTMLElement","[object Object]","templateString","super","this","UTIL","defineProperties","form","readonly","hoveredIndex","get","optionsElement","injected","private","default","options","displayOptions","querySelector","selectedOptions","title","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","open","required","size","PRIVATE","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","clear","close","preventDefault","multiple","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","detail","selectedOptionsElement","removeOpenListeners","removeEventListener","stateChangeHandler","value","hasAttribute","unHoverAllOptions","printToConsole","toggleHandler","registerListeners","attribute.change","attribute","oldValue","newValue","update","blur","focus","options.selected","state.change","toggle","rendered","setAttribute","observedAttributes","length","index","deselectAll","selectedOption","item","text","option","addOption","checkValidity","labels","defineProperty","createElement","slot","appendChild","children","Array","from","forEach","addOptions","localName","add","id","namedItem","selector","includes","querySelectorAll","remove","removeOptionByIndex","string","setCustomValidity","customElements","define"],"mappings":"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"}