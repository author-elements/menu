{"version":3,"file":"author-select.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorSelectElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      form: {\n        readonly: true\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      labels: {\n        private: true\n      },\n\n      middleware: {\n        private: true,\n        default: {\n          beforeChange: null,\n          afterChange: null\n        }\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      selectedOptionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-selected-options')\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      type: {\n        readonly: true,\n        get: () => this.multiple ? 'select-multiple' : 'select-one'\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      multiple: false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      },\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          default: return\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        this.emit('options.selected', evt.detail.options, this.selectedOptionsElement)\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        if (afterChange && typeof afterChange === 'function') {\n          afterChange(evt.detail.previous, this.selectedOptions)\n        }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'open':\n            if (!value) {\n              return this.PRIVATE.removeOpenListeners()\n            }\n\n            if (this.multiple) {\n              return this.removeAttribute('open')\n            }\n\n            this.optionsElement.unHoverAllOptions()\n            return this.PRIVATE.addOpenListeners()\n\n          case 'multiple':\n            if (value && this.hasAttribute('open')) {\n              this.removeAttribute('open')\n            }\n\n            break\n\n          default: return\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'multiple':\n            return this.emit('state.change', {\n              name: 'multiple',\n              value: this.multiple\n            })\n\n          case 'open':\n            return this.emit('state.change', {\n              name: 'open',\n              value: this.open\n            })\n\n          case 'placeholder':\n            if (this.selectedOptionsElement) {\n              this.selectedOptionsElement.update()\n            }\n\n            break\n\n            case 'size':\n              return this.PRIVATE.throwSizeAttributeWarning()\n\n          default: return\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'multiple', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get afterChange () {\n    return this.PRIVATE.middleware.afterChange\n  }\n\n  set afterChange (func) {\n    this.PRIVATE.middleware.afterChange = func.bind(this)\n  }\n\n  get beforeChange () {\n    return this.PRIVATE.middleware.beforeChange\n  }\n\n  set beforeChange (func) {\n    this.PRIVATE.middleware.beforeChange = func.bind(this)\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n    this.selectedOptionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (select, labels) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: select\n    })\n\n    let selectedOptionsElement = document.createElement('author-selected-options')\n    selectedOptionsElement.slot = 'selectedoptions'\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    this.PRIVATE.labels = labels\n\n    this.appendChild(selectedOptionsElement)\n    this.appendChild(optionsElement)\n\n    if (select.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(select.children).forEach(option => {\n          if (option.index !== select.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(select.children)\n\n      if (!this.multiple) {\n        this.selectedOptionsElement.add(this.optionsElement.options[this.selectedIndex])\n      }\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (selector !== ':checked') {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (selector !== ':checked') {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-select', AuthorSelectElement)\n\nexport default AuthorSelectElement\n"],"names":["AuthorSelectElement","UTIL","defineProperties","form","readonly","hoveredIndex","get","_this","optionsElement","injected","private","default","labels","middleware","beforeChange","afterChange","options","displayOptions","querySelector","selectedOptions","selectedOptionsElement","title","type","multiple","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","open","required","size","PRIVATE","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","preventDefault","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","detail","previous","removeOpenListeners","removeEventListener","stateChangeHandler","value","unHoverAllOptions","hasAttribute","printToConsole","toggleHandler","registerListeners","attribute","oldValue","newValue","update","blur","focus","toggle","rendered","setAttribute","AuthorBaseElement","HTMLElement","option","index","addOption","this","checkValidity","clear","deselectAll","select","defineProperty","createElement","slot","appendChild","children","length","Array","from","forEach","addOptions","add","item","id","namedItem","selector","querySelectorAll","removeOptionByIndex","string","setCustomValidity","func","bind","selectedOption","text","customElements","define"],"mappings":"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"}