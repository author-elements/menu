{"version":3,"file":"author-control.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorFormControlElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      type: ''\n    })\n\n    this.UTIL.defineProperties({\n      initialValue: {\n        default: null\n      },\n\n      input: {\n        private: true\n      },\n\n      fieldInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'color',\n          'date',\n          'datetime-local',\n          'email',\n          'file',\n          'hidden',\n          'image',\n          'month',\n          'number',\n          'password',\n          'range',\n          'reset',\n          'search',\n          'submit',\n          'tel',\n          'text',\n          'time',\n          'url',\n          'week',\n          'textarea'\n        ]\n      },\n\n      toggleInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'checkbox',\n          'radio'\n        ],\n      },\n\n      supportedTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'field',\n          'toggle',\n          'select'\n        ]\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      initDatalist: (input, datalist) => {\n        this.type = 'select'\n\n        if (!customElements.get('author-datalist')) {\n          input.id = this.PRIVATE.guid\n          datalist.id = `${input.id}_datalist`\n          input.setAttribute('list', datalist.id)\n          input.slot = input.slot || 'input'\n          // select.setAttribute('role', 'menu')\n          this.PRIVATE.input = input\n\n          let titleEls = datalist.querySelectorAll('option[title]')\n          titleEls.forEach(el => select.removeChild(el))\n\n          Array.from(datalist.options).forEach(option => {\n            if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n              option.removeAttribute('label')\n            }\n          })\n\n          return\n        }\n\n        let surrogate = document.createElement('author-datalist')\n        surrogate.slot = 'input'\n\n        Array.from(datalist.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              datalist.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(datalist)\n        this.removeChild(input)\n\n        // Use a select as sourceElement to preserve option indexes, since\n        // datalist doesn't assign indexes to child options\n        let select = document.createElement('select')\n        Array.from(datalist.children).forEach(option => select.add(option))\n        select.selectedIndex = -1\n\n        surrogate.inject(input, select, this.PRIVATE.guid)\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initInput: input => {\n        input.slot = input.slot || 'input'\n        this.PRIVATE.input = input\n        input.id = this.PRIVATE.guid\n        this.initialValue = input.value\n\n        if (this.PRIVATE.fieldInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'field'\n        }\n\n        if (this.PRIVATE.toggleInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'toggle'\n        }\n      },\n\n      initLabel: label => {\n        this.label = label\n        label.slot = label.slot || 'label'\n        label.htmlFor = this.PRIVATE.guid\n\n        if (this.type === 'select') {\n          this.label.addEventListener('click', (evt) => {\n            this.input.focus()\n          })\n        }\n      },\n\n      initDefaultSelect: select => {\n        select.id = this.PRIVATE.guid\n        select.slot = select.slot || 'input'\n        select.setAttribute('role', 'menu')\n        this.PRIVATE.input = select\n\n        // Purge incompatible attributes\n        let titleEls = select.querySelectorAll('option[title]')\n        titleEls.forEach(el => select.removeChild(el))\n\n        Array.from(select.options).forEach(option => {\n          if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n            option.removeAttribute('label')\n          }\n        })\n      },\n\n      initMultipleSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedOptions\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      initSelectSurrogate: (original, surrogate) => {\n        surrogate.slot = 'input'\n        surrogate.id = this.PRIVATE.guid\n\n        Array.from(original.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              original.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(original)\n        surrogate.inject(original, this.querySelectorAll('label'))\n\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedIndex\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      transformChild: (node, index, collection) => {\n        switch (node.nodeName) {\n          case 'LABEL':\n            return this.PRIVATE.initLabel(node)\n\n          case 'INPUT':\n            // Check if there is an additional element adjacent to the input\n            if (collection[index + 1] === void 0) {\n              return this.PRIVATE.initInput(node)\n            }\n\n            let adjacentElement = collection[index + 1];\n\n            if (!adjacentElement || adjacentElement.nodeName !== 'DATALIST') {\n              return this.PRIVATE.initInput(node)\n            }\n\n            return this.PRIVATE.initDatalist(node, adjacentElement)\n\n          case 'TEXTAREA':\n            return this.PRIVATE.initInput(node)\n\n          case 'SELECT':\n            if (!node.multiple) {\n              return this.PRIVATE.initSelectMenu(node)\n            }\n\n            return this.PRIVATE.initMultipleSelectMenu(node)\n\n          default:\n            this.initialValue = node.value;\n            return\n        }\n      }\n    })\n\n    this.UTIL.monitorChildren((mutations, observer) => {\n      let filtered = mutations.filter(record => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return false\n        }\n\n        return node.nodeType !== 3\n      })\n\n      filtered.forEach((record, index, array) => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return\n        }\n\n        this.PRIVATE.transformChild(node, index, array.map(mutation => mutation.addedNodes.item(0)))\n      })\n\n      observer.disconnect()\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => this.PRIVATE.guid = this.UTIL.generateGuid('control_'),\n      rendered: () => Array.from(this.children).forEach((child, index, array) => this.PRIVATE.transformChild(child, index, array))\n    })\n  }\n\n  static get observedAttributes () {\n    return ['disabled']\n  }\n\n  get input () {\n    return this.PRIVATE.input\n  }\n\n  set input (input) {\n    if (this.input) {\n      return console.warn(`Setting <${this.localName}> child input programmatically is not allowed.`)\n    }\n\n    this.PRIVATE.input = input\n  }\n}\n\ncustomElements.define('author-control', AuthorFormControlElement)\n\nexport default AuthorFormControlElement\n"],"names":["AuthorFormControlElement","super","this","UTIL","defineAttributes","type","defineProperties","initialValue","default","input","private","fieldInputTypes","readonly","toggleInputTypes","supportedTypes","definePrivateMethods","initDatalist","datalist","customElements","get","id","PRIVATE","guid","setAttribute","slot","querySelectorAll","forEach","el","select","removeChild","Array","from","options","option","hasAttribute","getAttribute","trim","removeAttribute","let","surrogate","document","createElement","attributes","attr","specified","name","value","children","add","selectedIndex","inject","appendChild","initInput","indexOf","initLabel","label","htmlFor","addEventListener","evt","focus","initDefaultSelect","initMultipleSelectMenu","selectedOptions","initSelectSurrogate","original","initSelectMenu","transformChild","node","index","collection","nodeName","adjacentElement","multiple","monitorChildren","mutations","observer","filter","record","addedNodes","item","nodeType","array","map","mutation","disconnect","registerListeners","connected","generateGuid","rendered","child","staticAccessors","observedAttributes","prototypeAccessors","console","warn","AuthorBaseElement","HTMLElement","define"],"mappings":"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"}