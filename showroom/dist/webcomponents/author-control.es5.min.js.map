{"version":3,"file":"author-control.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorFormControlElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      type: ''\n    })\n\n    this.UTIL.defineProperties({\n      initialValue: {\n        default: null\n      },\n\n      input: {\n        private: true\n      },\n\n      fieldInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'color',\n          'date',\n          'datetime-local',\n          'email',\n          'file',\n          'hidden',\n          'image',\n          'month',\n          'number',\n          'password',\n          'range',\n          'reset',\n          'search',\n          'submit',\n          'tel',\n          'text',\n          'time',\n          'url',\n          'week',\n          'textarea'\n        ]\n      },\n\n      toggleInputTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'checkbox',\n          'radio'\n        ],\n      },\n\n      supportedTypes: {\n        readonly: true,\n        private: true,\n        default: [\n          'field',\n          'toggle',\n          'select'\n        ]\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      initDatalist: (input, datalist) => {\n        this.type = 'select'\n\n        if (!customElements.get('author-datalist')) {\n          console.dir(input);\n          input.id = this.PRIVATE.guid\n          datalist.id = `${input.id}_datalist`\n          input.setAttribute('list', datalist.id)\n          input.slot = input.slot || 'input'\n          // select.setAttribute('role', 'menu')\n          this.PRIVATE.input = input\n\n          let titleEls = datalist.querySelectorAll('option[title]')\n          titleEls.forEach(el => select.removeChild(el))\n\n          Array.from(datalist.options).forEach(option => {\n            if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n              option.removeAttribute('label')\n            }\n          })\n\n          return\n        }\n\n        let surrogate = document.createElement('author-datalist')\n        surrogate.slot = 'input'\n\n        Array.from(datalist.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              datalist.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(datalist)\n        this.removeChild(input)\n\n        surrogate.inject(input, datalist, this.PRIVATE.guid)\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initInput: input => {\n        input.slot = input.slot || 'input'\n        this.PRIVATE.input = input\n        input.id = this.PRIVATE.guid\n        this.initialValue = input.value\n\n        if (this.PRIVATE.fieldInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'field'\n        }\n\n        if (this.PRIVATE.toggleInputTypes.indexOf(input.type) >= 0) {\n          this.type = 'toggle'\n        }\n      },\n\n      initLabel: label => {\n        this.label = label\n        label.slot = label.slot || 'label'\n        label.htmlFor = this.PRIVATE.guid\n\n        if (this.type === 'select') {\n          this.label.addEventListener('click', (evt) => {\n            this.input.focus()\n          })\n        }\n      },\n\n      initDefaultSelect: select => {\n        select.id = this.PRIVATE.guid\n        select.slot = select.slot || 'input'\n        select.setAttribute('role', 'menu')\n        this.PRIVATE.input = select\n\n        // Purge incompatible attributes\n        let titleEls = select.querySelectorAll('option[title]')\n        titleEls.forEach(el => select.removeChild(el))\n\n        Array.from(select.options).forEach(option => {\n          if (option.hasAttribute('label') && option.getAttribute('label').trim() === '') {\n            option.removeAttribute('label')\n          }\n        })\n      },\n\n      initMultipleSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedOptions\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      initSelectSurrogate: (original, surrogate) => {\n        surrogate.slot = 'input'\n        surrogate.id = this.PRIVATE.guid\n\n        Array.from(original.attributes).forEach(attr => {\n          if (attr.specified) {\n            surrogate.setAttribute(attr.name, attr.value)\n\n            if (attr.name === 'autofocus') {\n              original.removeAttribute(attr.name)\n            }\n          }\n        })\n\n        this.removeChild(original)\n        surrogate.inject(original, this.querySelectorAll('label'))\n\n        this.appendChild(surrogate)\n        this.PRIVATE.input = surrogate\n      },\n\n      initSelectMenu: select => {\n        this.type = 'select'\n        this.initialValue = select.selectedIndex\n\n        if (!customElements.get('author-select')) {\n          return this.PRIVATE.initDefaultSelect(select)\n        }\n\n        this.PRIVATE.initSelectSurrogate(select, document.createElement('author-select'))\n      },\n\n      transformChild: (node, index, collection) => {\n        switch (node.nodeName) {\n          case 'LABEL':\n            return this.PRIVATE.initLabel(node)\n\n          case 'INPUT':\n            // Check if there is an additional element adjacent to the input\n            if (collection[index + 1] === void 0) {\n              return this.PRIVATE.initInput(node)\n            }\n\n            let adjacentElement = collection[index + 1].addedNodes.item(0);\n\n            if (!adjacentElement || adjacentElement.nodeName !== 'DATALIST') {\n              return this.PRIVATE.initInput(node)\n            }\n\n            return this.PRIVATE.initDatalist(node, adjacentElement)\n\n          case 'TEXTAREA':\n            return this.PRIVATE.initInput(node)\n\n          case 'SELECT':\n            if (!node.multiple) {\n              return this.PRIVATE.initSelectMenu(node)\n            }\n\n            return this.PRIVATE.initMultipleSelectMenu(node)\n\n          default:\n            this.initialValue = node.value;\n            return\n        }\n      }\n    })\n\n    this.UTIL.monitorChildren((mutations, observer) => {\n      let filtered = mutations.filter(record => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return false\n        }\n\n        return node.nodeType !== 3\n      })\n\n      filtered.forEach((record, index, array) => {\n        let node = record.addedNodes.item(0)\n\n        if (!node) {\n          return\n        }\n\n        this.PRIVATE.transformChild(node, index, array)\n      })\n\n      observer.disconnect()\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => this.PRIVATE.guid = this.UTIL.generateGuid('control_'),\n      rendered: () => Array.from(this.children).forEach((child, index, array) => this.PRIVATE.transformChild(child, index, array))\n    })\n  }\n\n  static get observedAttributes () {\n    return ['disabled']\n  }\n\n  get input () {\n    return this.PRIVATE.input\n  }\n\n  set input (input) {\n    if (this.input) {\n      return console.warn(`Setting <${this.localName}> child input programmatically is not allowed.`)\n    }\n\n    this.PRIVATE.input = input\n  }\n}\n\ncustomElements.define('author-control', AuthorFormControlElement)\n\nexport default AuthorFormControlElement\n"],"names":["AuthorFormControlElement","super","this","UTIL","defineAttributes","type","defineProperties","initialValue","default","input","private","fieldInputTypes","readonly","toggleInputTypes","supportedTypes","definePrivateMethods","initDatalist","datalist","customElements","get","console","dir","id","PRIVATE","guid","setAttribute","slot","querySelectorAll","forEach","el","select","removeChild","Array","from","options","option","hasAttribute","getAttribute","trim","removeAttribute","let","surrogate","document","createElement","attributes","attr","specified","name","value","inject","appendChild","initInput","indexOf","initLabel","label","htmlFor","addEventListener","evt","focus","initDefaultSelect","initMultipleSelectMenu","selectedOptions","initSelectSurrogate","original","initSelectMenu","selectedIndex","transformChild","node","index","collection","nodeName","adjacentElement","addedNodes","item","multiple","monitorChildren","mutations","observer","filter","record","nodeType","array","disconnect","registerListeners","connected","generateGuid","rendered","children","child","staticAccessors","observedAttributes","prototypeAccessors","warn","AuthorBaseElement","HTMLElement","define"],"mappings":"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"}