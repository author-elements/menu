{"version":3,"file":"author-options.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorOptionsElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      cherryPickedOptions: {\n        private: true\n      },\n\n      filteredOptions: {\n        readonly: true,\n        get: () => {\n          let { options } = this\n\n          for (let filter in this.PRIVATE.filters) {\n            options = this.PRIVATE.filters[filter]()\n          }\n\n          return Array.isArray(options) ? options : []\n        }\n      },\n\n      filters: {\n        private: true,\n        default: {}\n      },\n\n      form: {\n        readonly: true,\n        get: () => this.parentNode.form\n      },\n\n      displayOptions: {\n        readonly: true,\n        get: () => {\n          let AuthorHTMLOptionsCollection = this.PRIVATE.generateAuthorHTMLOptionsCollectionConstructor()\n          let array = this.options.map(option => option.displayElement)\n          let addFunction = (element, before) => this.addOption(this.PRIVATE.generateOptionObject(element), before)\n          let removeFunction = index => this.removeOptionByIndex(index)\n          return new AuthorHTMLOptionsCollection(array, this.selectedIndex, addFunction, removeFunction)\n        }\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.options.findIndex(option => option.displayElement.hover)\n      },\n\n      isSlave: {\n        private: true,\n        readonly: true,\n        get: () => this.parentNode.localName === 'author-select' || this.parentNode.localName === 'author-datalist'\n      },\n\n      lastSelectedIndex: {\n        private: true\n      },\n\n      multiple: {\n        readonly: true,\n        get: () => this.parentNode.multiple\n      },\n\n      options: {\n        readonly: true,\n        default: []\n      },\n\n      selectedIndices: {\n        readonly: true,\n        get: () => [...this.selectedOptions].map(option => option.index)\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => {\n          let nodes = this.querySelectorAll('[selected]')\n          let AuthorHTMLCollection = this.PRIVATE.generateAuthorHTMLCollectionConstructor()\n          return new AuthorHTMLCollection(nodes)\n        }\n      },\n\n      Selection: {\n        readonly: true,\n        private: true,\n        default: class {\n          constructor (options = []) {\n            this.options = options\n          }\n\n          get displayElements () {\n            return this.options.map(option => option.displayElement)\n          }\n\n          get length () {\n            return this.options.length\n          }\n\n          get first () {\n            return this.options[0]\n          }\n\n          get last () {\n            return this.options[this.options.length - 1]\n          }\n\n          append (option) {\n            this.options.push(option)\n          }\n\n          clear () {\n            this.options = []\n          }\n\n          includes (option) {\n            return this.options.includes(option)\n          }\n\n          prepend (option) {\n            this.options.unshift(option)\n          }\n\n          selectAll () {\n            this.options.forEach(option => option.selected = true)\n          }\n        }\n      },\n\n      selectionStartIndex: {\n        private: true\n      },\n\n      visibleOptions: {\n        readonly: true,\n        get: () => this.options.filter(option => !option.hidden)\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      arrowDownHandler: evt => {\n        if (!this.multiple) {\n          let { startIndex } = evt.detail\n\n          switch (startIndex) {\n            case this.options.length - 1:\n              return\n\n            default:\n              return this.PRIVATE.hoverNextOption(startIndex)\n          }\n\n          return\n        }\n\n        let { lastSelectedIndex } = this.PRIVATE\n\n        if (lastSelectedIndex === this.options.length - 1) {\n          return\n        }\n\n        return this.emit('option.selected', {\n          index: lastSelectedIndex === null ? 0 : lastSelectedIndex + 1,\n          keyboard: true,\n          shiftKey: evt.detail.shiftKey,\n          ctrlKey: false,\n          metaKey: false\n        })\n      },\n\n      arrowUpHandler: evt => {\n        if (!this.multiple) {\n          let { startIndex } = evt.detail\n\n          switch (startIndex) {\n            case -1:\n            case 0:\n              return\n\n            default:\n              return this.PRIVATE.hoverPreviousOption(startIndex)\n          }\n\n          return\n        }\n\n        let { lastSelectedIndex } = this.PRIVATE\n\n        if (lastSelectedIndex === 0) {\n          return\n        }\n\n        return this.emit('option.selected', {\n          index: lastSelectedIndex === null ? this.options.length - 1 : lastSelectedIndex - 1,\n          keyboard: true,\n          shiftKey: evt.detail.shiftKey,\n          ctrlKey: false,\n          metaKey: false\n        })\n      },\n\n      diffSelections: (comparator, comparable) => {\n        return comparator.filter(option => !comparable.includes(option))\n      },\n\n      generateAuthorHTMLOptionsCollectionConstructor: () => {\n        let _p = new WeakMap()\n\n        let AuthorHTMLCollection = this.PRIVATE.generateAuthorHTMLCollectionConstructor()\n\n        let AuthorHTMLOptionsCollection = class AuthorHTMLOptionsCollection extends AuthorHTMLCollection {\n          constructor (arr, selectedIndex = -1, add, remove) {\n            super(arr)\n            this.selectedIndex = selectedIndex\n            this.add = add\n            this.remove = remove\n\n            _p.set(this, {arr})\n          }\n\n          [Symbol.toStringTag] () {\n            return 'AuthorHTMLOptionsCollection'\n          }\n        }\n\n        return AuthorHTMLOptionsCollection\n      },\n\n      generateOptgroup: optgroup => {\n        if (!customElements.get('author-optgroup')) {\n          return this.UTIL.throwError({\n            type: 'dependency',\n            vars: { name: 'author-optgroup' }\n          })\n        }\n\n        let surrogate = document.createElement('author-optgroup')\n        surrogate.id = this.UTIL.generateGuid('optgroup')\n\n        let label = optgroup.getAttribute('label')\n\n        if (!label || label.trim() === '') {\n          return this.UTIL.throwError({\n            message: '<optgroup> must have a label attribute!'\n          })\n        }\n\n        surrogate.setAttribute('label', label)\n\n        let options = optgroup.querySelectorAll('option')\n        Array.from(options).forEach(option => {\n          this.addOption(this.PRIVATE.generateOptionObject(option), null, surrogate)\n        })\n\n        return surrogate\n      },\n\n      generateOptionObject: sourceElement => {\n        if (!customElements.get('author-option')) {\n          return this.UTIL.throwError({\n            type: 'dependency',\n            vars: { name: 'author-option' }\n          })\n        }\n\n        let OptionConstructor = this.PRIVATE.generateOptionConstructor()\n        return new OptionConstructor(this, this.UTIL.generateGuid(), sourceElement, document.createElement('author-option'))\n      },\n\n      generateOptionConstructor: () => {\n        let _p = new WeakMap()\n\n        return class AuthorOptionObject {\n          constructor (parent, key, sourceElement, displayElement) {\n            this.key = key\n            this.form = parent.form\n            this.defaultSelected = sourceElement.selected\n\n            this.sourceElement = sourceElement\n            this.displayElement = displayElement\n            this.displayElement.parent = parent\n            this.displayElement.selected = sourceElement.selected\n            this.displayElement.defaultSelected = sourceElement.selected\n            this.displayElement.innerHTML = sourceElement.innerHTML\n\n            // Add additional attributes\n            Array.from(sourceElement.attributes).forEach(attr => {\n              if (typeof attr.value === 'boolean') {\n                return attr.value ? this.displayElement.setAttribute(attr.name, '') : this.displayElement.removeAttribute(attr.name)\n              }\n\n              this.displayElement.setAttribute(attr.name, attr.value)\n            })\n\n            _p.set(this, {\n              attributes: {\n                disabled: sourceElement.disabled,\n                id: sourceElement.getAttribute('id'),\n                label: sourceElement.getAttribute('label') || sourceElement.textContent.trim(),\n                selected: sourceElement.selected,\n                value: sourceElement.hasAttribute('value') ? sourceElement.getAttribute('value').trim() : null,\n                text: sourceElement.text.trim()\n              },\n\n              setAttr: (name, value) => {\n                this.sourceElement[name] = value\n\n                if (typeof value === 'boolean') {\n                  value ? this.displayElement.setAttribute(name, '') : this.displayElement.removeAttribute(name)\n                } else {\n                  this.displayElement.setAttribute(name, value)\n                }\n\n                _p.get(this).attributes[name] = value\n              }\n            })\n          }\n\n          get disabled () {\n            return _p.get(this).attributes.disabled\n          }\n\n          set disabled (bool) {\n            _p.get(this).setAttr('disabled', bool)\n          }\n\n          get hidden () {\n            return this.displayElement.hidden\n          }\n\n          set hidden (bool) {\n            this.displayElement.hidden = bool\n          }\n\n          get index () {\n            return this.sourceElement.index\n          }\n\n          get id () {\n            return _p.get(this).attributes.id\n          }\n\n          set id (id) {\n            _p.get(this).setAttr('id', id)\n          }\n\n          get selected () {\n            return _p.get(this).attributes.selected\n          }\n\n          set selected (bool) {\n            _p.get(this).setAttr('selected', bool)\n          }\n\n          get label () {\n            return _p.get(this).attributes.label\n          }\n\n          set label (label) {\n            _p.get(this).setAttr('label', label)\n          }\n\n          get text () {\n            return _p.get(this).attributes.text\n          }\n\n          set text (text) {\n            _p.get(this).setAttr('text', text)\n          }\n\n          get value () {\n            return _p.get(this).attributes.value\n          }\n\n          set value (value) {\n            _p.get(this).setAttr('value', value)\n          }\n\n          remove () {\n            this.sourceElement.remove()\n            this.displayElement.remove()\n          }\n        }\n      },\n\n      getCurrentSelection: () => this.options.filter(option => option.selected),\n\n      getPreviousVisibleOption: startIndex => {\n        let index = startIndex - 1\n        let option = this.options[index]\n\n        if (!option) {\n          return null\n        }\n\n        if (option.hidden) {\n          option = this.PRIVATE.getPreviousVisibleOption(index)\n        }\n\n        return option\n      },\n\n      getNextVisibleOption: startIndex => {\n        let index = startIndex + 1\n        let option = this.options[index]\n\n        if (!option) {\n          return null\n        }\n\n        if (option.hidden) {\n          option = this.PRIVATE.getNextVisibleOption(index)\n        }\n\n        return option\n      },\n\n      handleClickSelection: (detail, cb) => {\n        let {\n          cherryPickedOptions,\n          getCurrentSelection,\n          lastSelectedIndex,\n          Selection,\n          selectionStartIndex\n        } = this.PRIVATE\n\n        let { index, shiftKey, ctrlKey, metaKey } = detail\n        let selectedOption = this.options[index]\n\n        if (shiftKey && lastSelectedIndex !== null) {\n          this.PRIVATE.lastSelectedIndex = index\n          this.PRIVATE.cherryPickedOptions.clear()\n          let bounds = [index, selectionStartIndex].sort((a, b) => a - b)\n          return cb(new Selection(bounds[0] === bounds[1] ? [selectedOption] : this.options.slice(bounds[0], bounds[1] + 1)))\n        }\n\n        let currentSelection = getCurrentSelection()\n\n        if (ctrlKey || metaKey) {\n          this.PRIVATE.lastSelectedIndex = index\n          this.PRIVATE.selectionStartIndex = index\n\n          this.PRIVATE.cherryPickedOptions.options = selectedOption.selected ? currentSelection.filter(option => option !== selectedOption) : this.options.filter(option => option === selectedOption || currentSelection.includes(option))\n          return cb(this.PRIVATE.cherryPickedOptions)\n        }\n\n        if (currentSelection.length === 1 && index === lastSelectedIndex) {\n          return\n        }\n\n        this.PRIVATE.lastSelectedIndex = index\n        this.PRIVATE.selectionStartIndex = index\n        this.PRIVATE.cherryPickedOptions.clear()\n        return cb(new Selection([selectedOption]))\n      },\n\n      handleKeyboardSelection: (detail, cb) => {\n        let {\n          cherryPickedOptions,\n          getCurrentSelection,\n          Selection,\n          selectionStartIndex\n        } = this.PRIVATE\n\n        let { index, shiftKey } = detail\n        let selectedOption = this.options[index]\n        let currentSelection = getCurrentSelection()\n\n        this.PRIVATE.lastSelectedIndex = index\n\n        if (!shiftKey || currentSelection.length === 0) {\n          this.PRIVATE.selectionStartIndex = index\n          this.PRIVATE.cherryPickedOptions.clear()\n          return cb(new Selection([selectedOption]))\n        }\n\n        // 1 option or more selected\n        if (currentSelection.length > 0) {\n          let bounds = [index, selectionStartIndex].sort()\n          let selection = new Selection(bounds[0] === bounds[1] ? [selectedOption] : this.options.slice(bounds[0], bounds[1] + 1))\n\n          if (cherryPickedOptions.length > 0) {\n            selection.options = this.options.filter(option => selection.includes(option) || cherryPickedOptions.includes(option))\n          }\n\n          return cb(selection)\n        }\n      },\n\n      hoverPreviousOption: (startIndex) => {\n        let option = this.PRIVATE.getPreviousVisibleOption(startIndex);\n\n        if (!option || option.index === startIndex) {\n          return\n        }\n\n        this.hoverOption(option.index);\n      },\n\n      hoverNextOption: (startIndex) => {\n        let option = this.PRIVATE.getNextVisibleOption(startIndex);\n\n        if (!option || option.index === startIndex) {\n          return\n        }\n\n        this.hoverOption(option.index);\n      },\n\n      optionSelectionHandler: evt => {\n        let {\n          cherryPickedOptions,\n          diffSelections,\n          getCurrentSelection,\n          generateAuthorHTMLCollectionConstructor,\n          handleClickSelection,\n          handleKeyboardSelection,\n          Selection\n        } = this.PRIVATE\n\n        if (cherryPickedOptions === null) {\n          this.PRIVATE.cherryPickedOptions = new Selection([])\n        }\n\n        let { index, keyboard } = evt.detail\n\n        let completeOperation = selection => {\n          let currentSelection = getCurrentSelection()\n          let comparator = selection.length >= currentSelection.length ? selection.options : currentSelection\n          let diff = diffSelections(comparator, comparator === currentSelection ? selection.options : currentSelection)\n\n          if (diff.length === 0 || !this.PRIVATE.isSlave) {\n            return\n          }\n\n          this.deselectAll()\n          selection.selectAll()\n          this.emit('options.selected', {\n            options: selection.options,\n            previous: this.selectedOptions,\n            next: new (generateAuthorHTMLCollectionConstructor())(selection.displayElements)\n          }, this.parentNode)\n\n          // let { beforeChange } = this.parentNode\n          //\n          // let detail = {\n          //   options: selection.options,\n          //   previous: this.selectedOptions,\n          //   next: new (generateAuthorHTMLCollectionConstructor())(selection.displayElements)\n          // }\n          //\n          // let cb = () => {\n          //   this.deselectAll()\n          //   selection.selectAll()\n          //   return this.emit('options.selected', detail, this.parentNode)\n          // }\n          //\n          // if (!(beforeChange && typeof beforeChange === 'function')) {\n          //   return cb()\n          // }\n          //\n          // beforeChange(this.selectedOptions, detail.next, cb)\n        }\n\n        if (!this.multiple) {\n          return completeOperation(new Selection([this.options[index]]))\n        }\n\n        if (keyboard) {\n          return this.PRIVATE.handleKeyboardSelection(evt.detail, completeOperation)\n        }\n\n        return this.PRIVATE.handleClickSelection(evt.detail, completeOperation)\n      },\n\n      parentStateChangeHandler: evt => {\n        this.emit('state.change', evt.detail)\n\n        let { name, value } = evt.detail\n\n        switch (name) {\n          case 'multiple':\n            if (!value && this.selectedOptions.length > 0) {\n              let index = this.selectedIndex\n\n              this.deselectAll()\n              this.emit('option.selected', { index })\n            }\n\n            break\n\n          default: return\n        }\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      connected: () => {\n        this.PRIVATE.selectionStartIndex = this.selectedIndex >= 0 ? this.selectedIndex : 0\n\n        if (this.PRIVATE.isSlave) {\n          this.parentNode.on('state.change', this.PRIVATE.parentStateChangeHandler)\n        }\n      },\n\n      disconnected: () => {\n        if (this.PRIVATE.isSlave) {\n          this.parentNode.off('state.change', this.PRIVATE.parentStateChangeHandler)\n        }\n      },\n\n      'keydown.arrowUp': this.PRIVATE.arrowUpHandler,\n      'keydown.arrowDown': this.PRIVATE.arrowDownHandler,\n      'option.selected': this.PRIVATE.optionSelectionHandler\n    })\n  }\n\n  get selectedIndex () {\n    return this.selectedOptions.length > 0\n      ? this.selectedOptions.item(0).index\n      : -1\n  }\n\n  set selectedIndex (index) {\n    this.emit('option.selected', { index })\n  }\n\n  get selectionStartIndex () {\n    return this.PRIVATE.selectionStartIndex\n  }\n\n  set selectionStartIndex (value) {\n    this.UTIL.throwError({\n      type: 'readonly',\n      message: `\"selectionStartIndex\" cannot be set manually.`\n    })\n  }\n\n  addFilter (key = this.UTIL.generateGuid('filter_'), func) {\n    if (typeof func !== 'function') {\n      this.UTIL.throwError({\n        type: 'type',\n        message: `Filter must be a function`\n      })\n    }\n\n    if (this.PRIVATE.filters.hasOwnProperty(key)) {\n      console.warn(`Filter \"${key}\" alredy exists! Overwriting...`)\n    }\n\n    this.PRIVATE.filters[key] = func\n  }\n\n  hasFilter (filter) {\n    return this.PRIVATE.filters.hasOwnProperty(filter)\n  }\n\n  removeFilter (key) {\n    if (!this.PRIVATE.filters.hasOwnProperty(key)) {\n      return console.warn(`Filter \"${key}\" not found.`)\n    }\n\n    delete this.PRIVATE.filters[key]\n  }\n\n  removeAllFilters () {\n    this.PRIVATE.filters = {}\n  }\n\n  addOptgroup (optgroup) {\n    let label = document.createElement('author-optgroup-label')\n    label.innerHTML = optgroup.getAttribute('label')\n\n    this.appendChild(label)\n    this.appendChild(optgroup)\n  }\n\n  addOption (option, index = null, dest = this) {\n    if (!customElements.get('author-option')) {\n      return this.UTIL.throwError({\n        type: 'dependency',\n        vars: {\n          name: 'author-option'\n        }\n      })\n    }\n\n    if (option instanceof Option) {\n      option = this.PRIVATE.generateOptionObject(option)\n    }\n\n    if (this.PRIVATE.isSlave) {\n      this.parentNode[`${option.index}`] = option.displayElement\n    }\n\n    if (index) {\n      dest.insertBefore(option.displayElement, dest.children.item(index))\n\n      this.options.splice(index, 0, option)\n\n      if (this.PRIVATE.isSlave) {\n        this.parentNode.sourceElement.add(option.sourceElement, index)\n      }\n\n    } else {\n      dest.appendChild(option.displayElement)\n      this.options.push(option)\n\n      if (this.PRIVATE.isSlave && !this.parentNode.sourceElement[this.options.length - 1]) {\n        this.parentNode.sourceElement.appendChild(option.sourceElement)\n      }\n    }\n\n    if (option.selected) {\n      if (!this.multiple) {\n        this.selectedIndex = option.index\n        return\n      }\n    }\n  }\n\n  addOptions (children) {\n    Array.from(children).forEach(child => {\n      let isElement = child instanceof HTMLElement\n\n      switch (child.nodeName) {\n        case 'OPTION':\n          return this.addOption(isElement ? this.PRIVATE.generateOptionObject(child) : child)\n\n        case 'OPTGROUP':\n          return this.addOptgroup(isElement ? this.PRIVATE.generateOptgroup(child) : child)\n\n        default:\n          return this.UTIL.printToConsole(`${child.nodeName.toLowerCase()} is not a valid child element for <author-select>. Removing...`, 'warning')\n      }\n    })\n  }\n\n  clear () {\n    while (this.lastChild) {\n      this.removeChild(this.lastChild)\n    }\n  }\n\n  deselect (option, updateList = true) {\n    if (typeof option === 'number') {\n      option = this.options[option]\n    }\n\n    option.selected = false\n\n    if (this.PRIVATE.isSlave && this.selectedOptionsElement !== undefined) {\n      this.parentNode.selectedOptionsElement.remove(option, updateList)\n    }\n  }\n\n  deselectAll (showPlaceholder = true) {\n    this.options.filter(option => option.selected).forEach((option, index, options) => {\n      this.deselect(option, index = options.length - 1 && showPlaceholder)\n    })\n  }\n\n  find (query, caseSensitive = false) {\n    let results = Array.from(this.options).filter(option => {\n      let value = caseSensitive ? option.value : option.value.toLowerCase()\n      let text = caseSensitive ? option.text : option.text.toLowerCase()\n      query = caseSensitive ? query : query.toLowerCase()\n\n      return value.indexOf(query) >= 0 || text.indexOf(query) >= 0\n    })\n\n    return Array.isArray(results) ? results : []\n  }\n\n  hoverOption (index) {\n    this.unHoverAllOptions()\n    this.options[index].displayElement.hover = true\n  }\n\n  item (index) {\n    return this.options[index].displayElement\n  }\n\n  namedItem (value) {\n    let query = this.options.filter(option => {\n      let id = option.sourceElement.attributes.getNamedItem('id')\n      return id && id.value === value\n    })\n\n    if (!query.length) {\n      return null\n    }\n\n    return query[query.length - 1].displayElement\n  }\n\n  /**\n   * @method removeOptionByIndex\n   * @param  {Number}  [index=null]\n   * Index of option to remove\n   * @param  {Boolean} [destroy=true]\n   */\n  removeOptionByIndex (index = null) {\n    if (index === null || index >= this.options.length) {\n      return\n    }\n\n    this.options[index].remove()\n  }\n\n  unHoverAllOptions () {\n    this.options.forEach((option, index) => this.unHoverOption(index))\n  }\n\n  unHoverOption (index) {\n    this.options[index].displayElement.hover = false\n  }\n}\n\ncustomElements.define('author-options', AuthorOptionsElement)\n\nexport default AuthorOptionsElement\n"],"names":["AuthorOptionsElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineProperties","cherryPickedOptions","private","filteredOptions","readonly","get","options","filter","PRIVATE","filters","Array","isArray","default","form","parentNode","displayOptions","generateAuthorHTMLOptionsCollectionConstructor","map","option","displayElement","selectedIndex","element","before","addOption","generateOptionObject","index","removeOptionByIndex","hoveredIndex","findIndex","hover","isSlave","localName","lastSelectedIndex","multiple","selectedIndices","selectedOptions","nodes","querySelectorAll","generateAuthorHTMLCollectionConstructor","Selection","displayElements","length","first","last","push","includes","unshift","forEach","selected","selectionStartIndex","visibleOptions","hidden","definePrivateMethods","arrowDownHandler","evt","startIndex","detail","hoverNextOption","emit","keyboard","shiftKey","ctrlKey","metaKey","arrowUpHandler","hoverPreviousOption","diffSelections","comparator","comparable","_p","WeakMap","AuthorHTMLCollection","arr","add","remove","set","Symbol","toStringTag","generateOptgroup","optgroup","customElements","throwError","type","vars","name","surrogate","document","createElement","id","generateGuid","label","getAttribute","trim","message","setAttribute","from","sourceElement","generateOptionConstructor","parent","key","defaultSelected","innerHTML","attributes","attr","value","removeAttribute","disabled","textContent","hasAttribute","text","setAttr","bool","getCurrentSelection","getPreviousVisibleOption","getNextVisibleOption","handleClickSelection","cb","selectedOption","clear","bounds","sort","a","b","slice","currentSelection","handleKeyboardSelection","selection","hoverOption","optionSelectionHandler","completeOperation","deselectAll","selectAll","previous","next","parentStateChangeHandler","registerListeners","connected","on","disconnected","off","keydown.arrowUp","keydown.arrowDown","option.selected","item","func","hasOwnProperty","console","warn","appendChild","dest","Option","insertBefore","children","splice","child","isElement","nodeName","addOptgroup","printToConsole","toLowerCase","lastChild","removeChild","updateList","undefined","selectedOptionsElement","showPlaceholder","deselect","query","caseSensitive","results","indexOf","unHoverAllOptions","getNamedItem","unHoverOption","define"],"mappings":"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"}