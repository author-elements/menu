{"version":3,"file":"author-menu.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorMenuElement extends AuthorBaseElement(HTMLElement) {\n  constructor (templateString = null) {\n    super(templateString || `{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineProperties({\n      form: {\n        readonly: true\n      },\n\n      hoveredIndex: {\n        readonly: true,\n        get: () => this.optionsElement.hoveredIndex\n      },\n\n      injected: {\n        private: true,\n        default: false\n      },\n\n      options: {\n        readonly: true,\n        get: () => this.optionsElement.displayOptions\n      },\n\n      optionsElement: {\n        readonly: true,\n        get: () => this.querySelector('author-options')\n      },\n\n      selectedOptions: {\n        readonly: true,\n        get: () => this.optionsElement ? this.optionsElement.selectedOptions : null\n      },\n\n      title: {\n        private: true,\n        default: ''\n      },\n\n      willValidate: {\n        readonly: true,\n        get: () => this.sourceElement.willValidate\n      },\n\n      validationMessage: {\n        readonly: true,\n        get: () => this.sourceElement.validationMessage\n      },\n\n      validity: {\n        readonly: true,\n        get: () => this.sourceElement.validity\n      }\n    })\n\n    this.UTIL.defineAttributes({\n      name: '',\n      placeholder: '',\n      autofocus: false,\n      disabled: false,\n      open: false,\n      required: false,\n\n      size: {\n        get: () => this.PRIVATE.throwSizeAttributeWarning(),\n        set: () => this.PRIVATE.throwSizeAttributeWarning()\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      addOpenListeners: () => {\n        document.addEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.addEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      blurHandler: evt => this.off('keydown', this.PRIVATE.keydownHandler),\n\n      bodyMousedownHandler: evt => {\n        if (evt.target === this || this.contains(evt.target)) {\n          return\n        }\n\n        this.open = false\n      },\n\n      focusHandler: evt => this.on('keydown', this.PRIVATE.keydownHandler),\n\n      keydownHandler: evt => {\n        let startIndex = this.hoveredIndex > -1\n          ? this.hoveredIndex\n          : this.selectedIndex > -1\n            ? this.selectedIndex\n            : -1\n\n        switch (evt[this.keySource]) {\n          case 27:\n          case 'Escape':\n            this.PRIVATE.clear()\n            return this.close()\n\n          case 13:\n          case 'Enter':\n          case 32:\n          case ' ':\n            evt.preventDefault()\n\n            if (!this.multiple) {\n              if (!this.open && (evt[this.keySource] === 32 || evt[this.keySource] === ' ')) {\n                this.open = true\n                return\n              }\n\n              if (this.hoveredIndex === this.selectedIndex || this.hoveredIndex === -1) {\n                this.open = false\n                return\n              }\n\n              this.selectedIndex = this.hoveredIndex\n            }\n\n            break\n\n          case 38:\n          case 'ArrowUp':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowUp', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          case 40:\n          case 'ArrowDown':\n            evt.preventDefault()\n\n            if (!this.multiple && !this.open) {\n              this.open = true\n              return\n            }\n\n            return this.emit('keydown.arrowDown', {\n              shiftKey: evt.shiftKey,\n              startIndex\n            }, this.optionsElement)\n\n          default: return\n        }\n      },\n\n      optionSelectionHandler: evt => {\n        evt.stopPropagation()\n        // let { afterChange } = this.PRIVATE.middleware\n\n        this.dispatchEvent(new Event('change', {}))\n\n        if (this.open) {\n          this.removeAttribute('open')\n        }\n\n        this.emit('options.selected', evt.detail.options, this.selectedOptionsElement)\n\n        // if (this.checkValidity()) {\n        //   this.removeAttribute('invalid')\n        // } else {\n        //   this.setAttribute('invalid', '')\n        // }\n\n        // if (afterChange && typeof afterChange === 'function') {\n        //   afterChange(evt.detail.previous, this.selectedOptions)\n        // }\n      },\n\n      removeOpenListeners: () => {\n        document.removeEventListener('mousedown', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchcancel', this.PRIVATE.bodyMousedownHandler)\n        document.removeEventListener('touchend', this.PRIVATE.bodyMousedownHandler)\n      },\n\n      stateChangeHandler: evt => {\n        let { name, value } = evt.detail\n\n        if (name === 'multiple' && value && this.hasAttribute('open')) {\n          this.removeAttribute('open')\n        }\n\n        if (name === 'open') {\n          if (!value) {\n            return this.PRIVATE.removeOpenListeners()\n          }\n\n          if (this.multiple) {\n            return this.removeAttribute('open')\n          }\n\n          this.optionsElement.unHoverAllOptions()\n          return this.PRIVATE.addOpenListeners()\n        }\n      },\n\n      throwSizeAttributeWarning: () => {\n        this.UTIL.printToConsole(`\"size\" attribute is not supported. Please use CSS to set the height of the options panel instead.`, 'warning')\n      },\n\n      toggleHandler: evt => this.open = !this.open//,\n\n      // validationHandler: evt => this.emit('invalid')\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.change': evt => {\n        let { attribute, oldValue, newValue } = evt.detail\n\n        if (newValue === oldValue) {\n          return\n        }\n\n        switch (attribute) {\n          case 'open':\n            return this.emit('state.change', {\n              name: 'open',\n              value: this.open\n            })\n\n          case 'placeholder':\n            if (this.selectedOptionsElement) {\n              this.selectedOptionsElement.update()\n            }\n\n            break\n\n            case 'size':\n              return this.PRIVATE.throwSizeAttributeWarning()\n        }\n      },\n\n      // connected: () => {\n      //   this.sourceElement.addEventListener('invalid', this.PRIVATE.validationHandler)\n      //\n      //   if (!this.checkValidity()) {\n      //     this.setAttribute('invalid', '')\n      //   }\n      // },\n\n      // disconnected: () => {\n      //   this.sourceElement.removeEventListener('invalid', this.PRIVATE.validationHandler)\n      // },\n\n      blur: this.PRIVATE.blurHandler,\n      focus: this.PRIVATE.focusHandler,\n      'options.selected': this.PRIVATE.optionSelectionHandler,\n      'state.change': this.PRIVATE.stateChangeHandler,\n      toggle: this.PRIVATE.toggleHandler,\n\n      rendered: () => {\n        if (!this.hasAttribute('tabindex')) {\n          this.setAttribute('tabindex', 0)\n        }\n\n        this.autofocus && this.focus()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['autofocus', 'disabled', 'name', 'open', 'placeholder', 'tabindex', 'size']\n  }\n\n  get length () {\n    return this.options.length\n  }\n\n  get selectedIndex () {\n    return this.optionsElement ? this.optionsElement.selectedIndex : -1\n  }\n\n  set selectedIndex (index) {\n    if (index < 0) {\n      return this.deselectAll()\n    }\n\n    this.optionsElement.selectedIndex = index\n  }\n\n  get value () {\n    if (this.selectedOptions.length === 0) {\n      return null\n    }\n\n    let selectedOption = this.selectedOptions.item(0)\n    return selectedOption ? selectedOption.value || selectedOption.text : null\n  }\n\n  add (option, index) {\n    this.optionsElement.addOption(option, index)\n  }\n\n  checkValidity () {\n    return this.sourceElement.checkValidity()\n  }\n\n  clear () {\n    this.optionsElement.clear()\n  }\n\n  deselectAll () {\n    this.optionsElement.deselectAll()\n  }\n\n  inject (sourceElement, labels = null) {\n    // Prevent re-injections\n    if (this.PRIVATE.injected) {\n      return\n    }\n\n    this.UTIL.defineProperty('sourceElement', {\n      readonly: true,\n      default: sourceElement\n    })\n\n    let optionsElement = document.createElement('author-options')\n    optionsElement.slot = 'options'\n\n    if (labels) {\n      this.UTIL.defineProperty('labels', {\n        private: true,\n        default: labels\n      })\n    }\n\n    this.appendChild(optionsElement)\n\n    if (sourceElement.children.length > 0) {\n      if (!this.multiple) {\n        Array.from(sourceElement.children).forEach(option => {\n          if (option.index !== sourceElement.selectedIndex) {\n            option.removeAttribute('selected')\n          }\n        })\n      }\n\n      this.optionsElement.addOptions(sourceElement.children)\n\n      if (sourceElement.localName === 'select') {\n        let selectedOptionsElement = document.createElement('author-selected-options')\n        selectedOptionsElement.slot = 'selectedoptions'\n        this.appendChild(selectedOptionsElement)\n\n        if (!this.multiple) {\n          this.selectedOptionsElement.add(this.optionsElement.options[this.selectedIndex])\n        }\n      }\n    }\n\n    this.PRIVATE.injected = true\n  }\n\n  item (index) {\n    return this.optionsElement.item(index)\n  }\n\n  namedItem (id) {\n    return this.optionsElement.namedItem(id)\n  }\n\n  /**\n   * method querySelector\n   * @param  {string} selector\n   * @return {HTMLElement}\n   * @override\n   */\n  querySelector (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelector(selector)\n    }\n\n    return this.selectedOptions.length > 0 ? this.selectedOptions[0] : null\n  }\n\n  /**\n   * method querySelectorAll\n   * @param  {string} selector\n   * @return {NodeList}\n   * @override\n   */\n  querySelectorAll (selector) {\n    if (!selector.includes(':checked')) {\n      return super.querySelectorAll(selector)\n    }\n\n    return this.optionsElement.querySelectorAll('[selected]')\n  }\n\n  remove (index = null) {\n    if (index === null) {\n      return super.remove()\n    }\n\n    this.optionsElement.removeOptionByIndex(index)\n  }\n\n  reportValidity () {\n    let isValid = this.sourceElement.checkValidity()\n\n    if (isValid) {\n      this.removeAttribute('invalid')\n    } else {\n      this.setAttribute('invalid', '')\n    }\n  }\n\n  setCustomValidity (string) {\n    this.sourceElement.setCustomValidity(string)\n  }\n}\n\ncustomElements.define('author-menu', AuthorMenuElement)\n\nexport default AuthorMenuElement\n"],"names":["AuthorMenuElement","templateString","UTIL","defineProperties","form","readonly","hoveredIndex","get","_this","optionsElement","injected","private","default","options","displayOptions","querySelector","selectedOptions","title","willValidate","sourceElement","validationMessage","validity","defineAttributes","name","placeholder","autofocus","disabled","open","required","size","PRIVATE","throwSizeAttributeWarning","set","definePrivateMethods","addOpenListeners","document","addEventListener","bodyMousedownHandler","blurHandler","evt","off","keydownHandler","target","contains","focusHandler","on","startIndex","selectedIndex","keySource","clear","close","preventDefault","multiple","emit","shiftKey","optionSelectionHandler","stopPropagation","dispatchEvent","Event","removeAttribute","detail","selectedOptionsElement","removeOpenListeners","removeEventListener","stateChangeHandler","value","hasAttribute","unHoverAllOptions","printToConsole","toggleHandler","registerListeners","attribute","oldValue","newValue","update","blur","focus","toggle","rendered","setAttribute","AuthorBaseElement","HTMLElement","option","index","addOption","this","checkValidity","deselectAll","labels","defineProperty","createElement","slot","appendChild","children","length","Array","from","forEach","addOptions","localName","add","item","id","namedItem","selector","includes","querySelectorAll","removeOptionByIndex","string","setCustomValidity","selectedOption","text","customElements","define"],"mappings":"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"}